pipeline {
  agent any
  environment {
      SERVER_USERNAME = "${env.JDS_USER}"
      SERVER_HOST = "${env.DIGITEAM_RESEARCH_HOST}"
      REGISTRY_URL = "${env.REGISTRY_URL}"
      REGISTRY_USERNAME = "${env.DIGITEAM_REGISTRY_USERNAME}"
      REGISTRY_PASSWORD = "${env.DIGITEAM_REGISTRY_PASSWORD}"
      IMAGE_NAME = "${env.DIGITEAM_RESEARCH_IMAGE_NAME}"
      SECRET_REPO = "${env.SECRET_REPO}"
      SECRET_FOLDER = "${env.SECRET_FOLDER}"
      SECRET_LOCATION = "${env.DIGITEAM_BACKEND_RISET_SECRET_LOCATION}"
  }
  options {
    timeout(time: 1, unit: 'HOURS')
  }
  stages {
    stage('Docker Build') {
      steps{
        sh 'rm -rf $SECRET_FOLDER*'
        sh 'git clone $SECRET_REPO'
        dir ("$SECRET_LOCATION") {
          sh 'gpg --decrypt development.txt.gpg > development.txt'
        }
        sh 'cp $SECRET_LOCATION/development.txt .env'
        sh 'rm -rf $SECRET_FOLDER'
        sh 'docker build -t $IMAGE_NAME:$BUILD_NUMBER -f docker/Dockerfile .'
        sh 'rm -rf .env'
      }
    }
    stage('Docker Push') {
      steps{
        sh 'docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD $REGISTRY_URL'
        sh 'docker push $IMAGE_NAME:$BUILD_NUMBER'
      }
    }
    stage('Run Docker on staging jabarcloud') {
      steps{
        sshagent (['']){
          // ssh block
          sh 'ssh -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST "sudo docker service rm digiteam-api \
              && sudo docker service create --name digiteam-api --publish 8080:80 $IMAGE_NAME:$BUILD_NUMBER"'                                                                  
        }  
      }
    }
  }
} 